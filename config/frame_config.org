# -*- mode: org; coding: utf-8-unix; indent-tabs-mode: nil -*-
#
# Copyright(C) Youhei SASAKI All rights reserved.
# $Lastupdate: 2013/04/18 23:25:41$
# License: Expat
#
#+TITLE: フォントとフレームの設定
#+AUTHOR: Youhei SASAKI
#+EMAIL: uwabami@gfd-dennou.org
#+SETUPFILE: ./export-config.org
#+BEGIN_HTML
---
layout: emacs
title: フォントとフレームの設定
---
#+END_HTML
* Theme
  自作の [[https://github.com/uwabami/color-theme-darkpastel][uwabami/color-theme-darkpastel · GitHub]] を使っている.
  #+BEGIN_SRC emacs-lisp
    (load "term/xterm")
    (unless (window-system)
      (xterm-register-default-colors))
    (cond
     (emacs24-p
      (el-get 'sync '(darkpastel-theme))
      (load-theme 'darkpastel t))
     (emacs23-p
      (when (locate-library "color-theme")
        (el-get 'sync '(color-theme-darkpastel))
        (setq color-theme-load-all-themes nil)
        (setq color-theme-libraries nil)
        (when (require 'color-theme-darkpastel nil t)
          (color-theme-darkpastel)))
      ))
  #+END_SRC
* カーソルのある位置の face を調べる関数
  #+BEGIN_SRC emacs-lisp
    (defun describe-face-at-point ()
      (interactive)
      (message "%s" (get-char-property (point) 'face)))
  #+END_SRC
* フォントの設定 [0/1]
  - [ ] これを設定すると, 描画が耐えきれないくらい遅くなる. 何故だろうか...
  #+BEGIN_SRC emacs-lisp
    ;; (defun my:font-ja-spec (spec)
    ;;   (set-fontset-font nil 'japanese-jisx0208 spec)
    ;;   (set-fontset-font nil 'katakana-jisx0201 spec)
    ;;   (set-fontset-font nil 'japanese-jisx0212 spec)
    ;;   (set-fontset-font nil '(#x0080 . #x024F) spec)
    ;;   (set-fontset-font nil '(#x0370 . #x03FF) spec)
    ;;   (set-fontset-font nil 'mule-unicode-0100-24ff spec)
    ;;   )
    ;; (defun my:font-ascii-spec (spec)
    ;;    (set-fontset-font nil 'ascii spec))
    ;; (defvar my:ja-font nil
    ;;   "Set japanese font. In Unix/Linux, use fc-list output name")
    ;; (cond
    ;;  (darwin-p
    ;;   (setq my:ja-font "Hiragino Maru Gothic Pro"))
    ;;  (nt-p
    ;;   (setq my:ja-font "メイリオ"))
    ;;  (t
    ;;   (setq my:ja-font "Migu 2M"))
    ;;   ;; (setq my:ja-font "Ricty Discord"))
    ;;  )
    ;; (when window-system
    ;;   (let
    ;;       (
    ;;        (font-size 16)
    ;;        (ascii-font "Inconsolata")
    ;;        ;; (ascii-font "Anonymous Pro")
    ;;        ;; (ascii-font "Migu 2M")
    ;;        ;; (ascii-font "Ricty Discord")
    ;;        (ja-font my:ja-font)
    ;;        )
    ;;     (my:font-ascii-spec (font-spec :family ascii-font :size font-size))
    ;;     (my:font-ja-spec (font-spec :family ja-font :size font-size))
    ;;     (custom-set-faces
    ;;      '(variable-pitch ((t (:family ascii-font :size font-size nil 'prepend))))
    ;;      '(fixed-pitch ((t (:family ascii-font :size font-size nil 'prepend))))
    ;;      )
    ;;     )
    ;;   (setq face-font-rescale-alist
    ;;         '(
    ;;           (".*Inconsolata.*" 1.0)
    ;;           (".*Migu.*" 1.2)
    ;;           ("-cdac$" . 1.0)))           ; 1.3
    ;;   ;; Space between lines
    ;;   (set-default 'line-spacing 1)
    ;;   )
  #+END_SRC
* Space や Tab に色付け
  whitespace-mode の方が良いのかもしれないけれど,
  設定が面倒なのと多少重いので...
  #+BEGIN_SRC emacs-lisp
    (defface my-face-r-1 '((t (:background "#888888"))) nil)
    (defface my-face-b-1 '((t (:background "#888888"))) nil)
    (defface my-face-b-2 '((t (:background "#888888"))) nil)
    (defface my-face-u-1 '((t (:foreground "#242424" :underline t))) nil)
    (defvar my-face-r-1 'my-face-r-1)
    (defvar my-face-b-1 'my-face-b-1)
    (defvar my-face-b-2 'my-face-b-2)
    (defvar my-face-u-1 'my-face-u-1)
    (defadvice font-lock-mode (before my-font-lock-mode ())
      (font-lock-add-keywords
       major-mode
       '(("\t" 0 my-face-b-2 append)
         ("　" 0 my-face-b-1 append)
         ("[ \t]+$" 0 my-face-u-1 append)
         ;; ("[\r]*\n" 0 my-face-r-1 append)
         )))
    (ad-enable-advice 'font-lock-mode 'before 'my-font-lock-mode)
    (ad-activate 'font-lock-mode)
  #+END_SRC
* Footnotes
