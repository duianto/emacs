# -*- mode: org; coding: utf-8-unix; indent-tabs-mode: nil -*-
#
# Copyright(C) Youhei SASAKI All rights reserved.
# $Lastupdate: 2012/09/17 22:38:00$
# License: Expat
#
#+TITLE: AUCTeX の設定
#+AUTHOR: Youhei SASAKI
#+EMAIL: uwabami@gfd-dennou.org
#+SETUPFILE: ./export-config.org
#+BEGIN_HTML
---
layout: emacs
title: AUCTeX の設定
---
#+END_HTML
* 始めに
  TeX 編集用のモードとしては YaTeX と AUCTeX がありますが, YaTeX の font-lock が遅いことから AUCTeX を使うようになりました.
* 導入
  =platex= が =$PATH= に無い場合には install しない, ことにしてみた.
  #+BEGIN_SRC emacs-lisp
    (unless (locate-library "auctex")
      (if (executable-find "platex")
          (el-get 'sync 'auctex)))
    (if (locate-library "auctex")
        (progn
          (load "auctex.el" nil t t)
          (load "preview-latex.el" nil t t)
          ))
  #+END_SRC
* 設定
  以下, ほぼ [[http://oku.edu.mie-u.ac.jp/~okumura/texwiki/?AUCTeX#ra10f739][TeXWiki - AUCTeX]] のまま.
** pTeX, upTeX 用の基本設定
  #+BEGIN_SRC emacs-lisp
    (setq TeX-default-mode 'japanese-latex-mode)
    (setq japanese-LaTeX-command-default "pLaTeX")
    (setq japanese-LaTeX-default-style "jsarticle")
    (setq TeX-engine-alist '((ptex "pTeX" "eptex" "platex" "eptex")
                             (uptex "upTeX" "euptex" "uplatex" "euptex")))
    (setq TeX-engine 'ptex)
    (setq preview-image-type 'dvipng)
    (add-hook 'LaTeX-mode-hook 'TeX-PDF-mode)
    (add-hook 'LaTeX-mode-hook 'LaTeX-math-mode)
    #+END_SRC
** コマンドの追加
  #+BEGIN_SRC emacs-lisp
    (add-hook 'LaTeX-mode-hook
              (function
               (lambda ()
                 (add-to-list 'TeX-command-list
                              '("pdflatex(original)" "pdflatex %t"
                                TeX-run-TeX nil (latex-mode) :help "Run pdflatex"))
                 (add-to-list 'TeX-command-list
                              '("pLaTeX" "platex -src-specials %t"
                                TeX-run-TeX nil (latex-mode) :help "Run e-pLaTeX"))
                 (add-to-list 'TeX-command-list
                              '("pLaTeX(euc)" "platex -src-specials --kanji=euc %t"
                                TeX-run-TeX nil (latex-mode) :help "Run e-pLaTeX(euc)"))
                 (add-to-list 'TeX-command-list
                              '("pLaTeX(sjis)" "platex -src-specials --kanji=sjis %t"
                                TeX-run-TeX nil (latex-mode) :help "Run e-pLaTeX(sjis)"))
                 (add-to-list 'TeX-command-list
                              '("pLaTeX(jis)" "platex -src-specials --kanji=jis %t"
                                TeX-run-TeX nil (latex-mode) :help "Run e-pLaTeX(jis)"))
                 (add-to-list 'TeX-command-list
                              '("pdfpLaTeX" "platex -synctex=1 %t && dvipdfmx %d"
                                TeX-run-TeX nil (latex-mode) :help "Run e-pLaTeX and dvipdfmx"))
                 (add-to-list 'TeX-command-list
                              '("pdfpLaTeX(euc)" "platex --kanji=euc -synctex=1 %t && dvipdfmx %d"
                                TeX-run-TeX nil (latex-mode) :help "Run e-pLaTeX(euc) and dvipdfmx"))
                 (add-to-list 'TeX-command-list
                              '("pdfpLaTeX(jis)" "platex --kanji=jis -synctex=1 %t && dvipdfmx %d"
                                TeX-run-TeX nil (latex-mode) :help "Run e-pLaTeX(euc) and dvipdfmx"))
                 (add-to-list 'TeX-command-list
                              '("pdfpLaTeX(sjis)" "platex --kanji=sjis -synctex=1 %t && dvipdfmx %d"
                                TeX-run-TeX nil (latex-mode) :help "Run e-pLaTeX(sjis) and dvipdfmx"))
                 (add-to-list 'TeX-command-list
                              '("ps2pdfpLaTeX" "platex -synctex=1 %t && dvips -Ppdf -t a4 -z -f %d | convbkmk -g > %f && ps2pdf %f"
                                TeX-run-TeX nil (latex-mode) :help "Run e-pLaTeX, dvips, and ps2pdf"))
                 (add-to-list 'TeX-command-list
                              '("pBibTeX" "pbibtex %s"
                                TeX-run-BibTeX nil t :help "Run pBibTeX"))
                 (add-to-list 'TeX-command-list
                              '("pBibTeX(euc)" "pbibtex --kanji=euc %s"
                                TeX-run-BibTeX nil t :help "Run pBibTeX"))
                 (add-to-list 'TeX-command-list
                              (progn
                                (if (executable-find "pxdvi")
                                    '("dviView" "xdvi -nofork -watchfile 1 %d"
                                      TeX-run-discard-or-function t t :help "Run DVI Viewer")
                                  '("pxdvi" "xdvi -nofork -watchfile 1 %d"
                                    TeX-run-discard-or-function t t :help "Run DVI Viewer"))))
                 (add-to-list 'TeX-command-list
                              '("Evince" "evince %s.pdf"
                                TeX-run-discard-or-function t t :help "Run Evince"))
                 (add-to-list 'TeX-command-list
                              '("fwdevince" "fwdevince %s.pdf %n \"%b\""
                                TeX-run-discard-or-function t t :help "Forward search with Evince"))
                 )
               ))
    (setq TeX-view-program-selection '((output-dvi "pxdvi")
                                       (output-pdf "Evince")))
  #+END_SRC
** フォント表示関連
   - サイズ可変の無効
   #+BEGIN_SRC emacs-lisp
     (setq font-latex-fontify-sectioning 1.0)
   #+END_SRC
   - 上付き, 下付きの無効化
   #+BEGIN_SRC emacs-lisp
     (setq font-latex-fontify-script nil)
   #+END_SRC
** SyncTex
   うまくいかないので保留...
  #+BEGIN_SRC emacs-lisp
    ;; (add-hook 'LaTeX-mode-hook 'TeX-source-correlate-mode)
    ;; (setq TeX-source-correlate-method 'synctex)
    ;; (setq TeX-source-correlate-start-server t)
  #+END_SRC
* BibTeX + Zotexo
** BibTeX
   日本語文献用にyomiを追加
   #+BEGIN_SRC emacs-lisp
     (setq bibtex-user-optional-fields
           '(("annote" "Personal annotation (ignored)")
             ("yomi" "Yomigana")
             ("location" "where it is (ignored)")
             ("memo" "Memorundum (ignored)")
             ))
   #+END_SRC
** RefTeX
   #+BEGIN_SRC emacs-lisp
     (unless (locate-library "reftex")
       (if (executable-find "platex")
           (el-get 'sync 'reftex)))
     (autoload 'reftex-mode     "reftex" "RefTeX Minor Mode" t)
     (autoload 'turn-on-reftex  "reftex" "RefTeX Minor Mode" nil)
     (autoload 'reftex-citation "reftex-cite" "Make citation" nil)
     (autoload 'reftex-index-phrase-mode "reftex-index" "Phrase mode" t)
     (add-hook 'LaTeX-mode-hook 'turn-on-reftex)   ; with AUCTeX LaTeX mode
     (add-hook 'latex-mode-hook 'turn-on-reftex)   ; with Emacs latex mode
     (setq reftex-plug-into-AUCTeX t)
     ;; Make RefTeX faster
     (setq reftex-enable-partial-scans t)
     (setq reftex-save-parse-info t)
     (setq reftex-use-multiple-selection-buffers t)
     (setq reftex-plug-into-AUCTeX t)
   #+END_SRC
** zotexo.el
   Firefox の Pluginのひとつである Zotero を使って
   BibTeX情報を更新する. 導入は el-get で
   #+BEGIN_SRC emacs-lisp
     (unless (locate-library "zotexo")
       (if (executable-find "platex")
           (el-get 'sync 'zotexo)))
     (when (require 'zotexo nil t)
       (add-hook 'LaTeX-mode-hook 'zotexo-minor-mode)
       (setq zotero-auto-update-is-on nil))
   #+END_SRC
