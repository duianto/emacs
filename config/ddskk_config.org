# -*- mode: org; coding: utf-8-unix; indent-tabs-mode: nil -*-
#+TITLE: ddskk の設定
#+AUTHOR: Youhei SASAKI
#+EMAIL: uwabami@gfd-dennou.org
#+DATE: 2016-08-09 13:12:43
#+LANG: ja
#+LAYOUT: page
#+CATEGORIES: cc-env emacs
#+PERMALINK: cc-env/emacs/config/ddskk_config.html
* 始めに
  本家: [[http://openlab.ring.gr.jp/skk/ddskk-ja.html][Daredevil SKK]] より
  #+BEGIN_QUOTE
  Daredevil SKK (DDSKK) は Emacs Lisp 版の SKK です。本家 SKK を受け継い
  で開発を行っています。
  #+END_QUOTE
  [[file:init.org][Emacsの基本設定]] で
  - skk-user-directory
  - skk-init-file
  を設定しているので、設定ファイルの構成は
  #+BEGIN_EXAMPLE
    skk-init-file          ~/.emacs.d/config/ddskk_config.{org,el,elc}
    skk-jisyo              ~/.emacs.d/tmp/skk/jisyo
    skk-backup-jisyo       ~/.emacs.d/tmp/skk/jisyo.bak
    skk-emacs-id-file      ~/.emacs.d/tmp/skk/emacs-id
    skk-record-file        ~/.emacs.d/tmp/skk/record
    skk-study-file         ~/.emacs.d/tmp/skk/study
    skk-study-backup-file  ~/.emacs.d/tmp/skk/study.bak
  #+END_EXAMPLE
  となっている(このファイルは ddskk_config.org)。
* sticky-shift
  sticky shift については   [[http://homepage1.nifty.com/blankspace/emacs/sticky.html][sticky shift]] を参照のこと.
  ddskk の 14.2 以降から同梱されるようになった(ありがたい)
  #+BEGIN_SRC emacs-lisp
    (setq skk-sticky-key ";")
  #+END_SRC
* 表示関連
  #+BEGIN_SRC emacs-lisp
    ;; 変換候補の表示位置
    (setq skk-show-candidates-always-pop-to-buffer t)
    ;; 候補表示件数を2列に
    (setq skk-henkan-show-candidates-rows 2)
    ;; 日本語表示しない
    (setq skk-japanese-message-and-error nil)
    ;; メニューを日本語にしない -> toolbar 非表示だし.
    (setq skk-show-japanese-menu nil)
    ;; 注釈の表示
    (setq skk-show-annotation nil)
    ;; インジケータの表示のカスタマイズ
    (setq skk-latin-mode-string "[_A]")
    (setq skk-hiragana-mode-string "[あ]")
    (setq skk-katakana-mode-string "[ア]")
    (setq skk-jisx0208-latin-mode-string "[Ａ]")
    (setq skk-jisx0201-mode-string "[_ｱ]")
    (setq skk-abbrev-mode-string "[aA]")
    (setq skk-indicator-use-cursor-color nil)
    ;; インジケータを左端に表示
    (setq skk-status-indicator 'left)
    ;; mode-line が動くのが許せないので，ちょっと修正
    (defadvice skk-make-indicator-alist
        (after my:set-skk-default-indicator activate)
      (dolist (elem
               '((abbrev " [aA]" . "--[aA]:")
                 (latin " [_A]" . "--[_A]:")
                 (default " [--]" . "--[--]:")))
        (setq ad-return-value
              (append (cons elem nil)
                      (delq (assoc (car elem) ad-return-value) ad-return-value)))))
    ;; (defun my:update-modeline-for-ddskk ()
    ;;   ""
    ;;   (progn
    ;;     (skk-mode) (skk-mode)))
    ;; (add-hook 'after-change-major-mode-hook 'my:update-modeline-for-ddskk)
    ;; (setq skk-show-tooltip t)
    ;; (when skk-show-tooltip
    ;;   (setq skk-tooltip-parameters
    ;;         '((background-color . "ForestGreen")
    ;;           (border-color . "royal blue")))
    ;;   )
    (setq skk-show-inline t)
    ;; (setq skk-show-inline 'vertical)
    ;; (when skk-show-inline
    ;;   (if (boundp 'skk-inline-show-face)
    ;;       (setq skk-inline-show-background-color "#2c2c88")))
    ;; カーソルには色をつけない
    (setq skk-use-color-cursor nil)
  #+END_SRC
* 編集関連
  #+BEGIN_SRC emacs-lisp
    ;; キーバインド
    (global-set-key "\C-x\C-j" 'skk-mode)
    (global-set-key "\C-xj" 'skk-mode)
    (global-set-key "\C-j" 'skk-mode)
    (global-set-key "\C-\\" 'skk-mode)
    ;; 半角カナを入力
    (setq skk-use-jisx0201-input-method t)
    ;; Enter で改行しない
    (setq skk-egg-like-newline t)
    ;;"「"を入力したら"」"も自動で挿入
    (setq skk-auto-insert-paren t)
    ;; 句読点変換ルール
    (setq skk-kuten-touten-alist
          '(
            (jp    .    ("。" . "、" ))
            (en-jp   .    ("．" . "，" ))
            (en    .    (". " . ", "))
            ))
    (setq-default skk-kutouten-type 'en-jp)
    ;; 全角記号の変換: @ での日付入力は使わない
    ;; (setq skk-date-ad t)
    ;; (setq skk-number-style nil)
    (setq skk-rom-kana-rule-list
          (append skk-rom-kana-rule-list
                  '(("!" nil "!")
                    (":" nil ":")
                    (";" nil ";")
                    ("?" nil "?")
                    ("z " nil "　")
                    ("\\" nil "\\")
                    ("@" nil "@")
                    )))
    ;; 全角英語モードで U+FF0D, U+FF5E を入力する?
    ;; (when (not (string< mule-version "6.0"))
    ;;   (aset skk-jisx0208-latin-vector ?- (string #xFF0D))
    ;;   (aset skk-jisx0208-latin-vector ?~ (string #xFF5E)))
    ;; 送り仮名が厳密に正しい候補を優先
    (setq skk-henkan-strict-okuri-precedence t)
    ;; 辞書の共有
    (setq skk-share-private-jisyo t)
  #+END_SRC
* インクリメンタルサーチ
  #+BEGIN_SRC emacs-lisp
    ;; Isearch setting: ddskk 起動時のみ, インクリメンタルサーチを使用
    ;; (add-hook 'isearch-mode-hook
    ;;           #'(lambda ()
    ;;               (when (and (boundp 'skk-mode)
    ;;                          skk-mode
    ;;                          skk-isearch-mode-enable)
    ;;                 (skk-isearch-mode-setup))))
    ;; (add-hook 'isearch-mode-end-hook
    ;;           #'(lambda ()
    ;;               (when (and (featurep 'skk-isearch)
    ;;                          skk-isearch-mode-enable)
    ;;                 (skk-isearch-mode-cleanup))))
    ;; (add-hook 'isearch-mode-hook 'skk-isearch-mode-setup)
    ;; (add-hook 'isearch-mode-end-hook 'skk-isearch-mode-cleanup)
    ;; 上が上手く動かないので minibuffer 内では強制的に skk off
    (add-hook 'skk-mode-hook
              (lambda ()
                (and (skk-in-minibuffer-p)
                     (skk-mode-exit))))
    ;; migemo があると，minibuffer までモードを引き摺っている，ような?
    (setq skk-isearch-start-mode 'latin)
  #+END_SRC
  インクリメンタルサーチは migemo に任せることに．
* 辞書の設定
  追加している辞書の一覧は
  - [[http://www.chibutsu.org/jisho/][地球物理辞書]]
  - [[http://www.geocities.jp/living_with_plasma/tanudic.html][天文・天体物理用語の漢字変換用辞書]]
  - はてなキーワード
  - [[http://matsucon.net/material/dic/][2ちゃんねる顔文字辞書 MatsuCon]]
  - [[http://matsucon.net/][MatsuCon]]
  といった所.
  はてなキーワードからの辞書の抽出は [[http://d.hatena.ne.jp/znz][id:znz]]znz さんの
   - [[http://rubyist.g.hatena.ne.jp/znz/20060924/p1][「はてなダイアリーキーワードふりがなリスト」を SKK の辞書に変換]]
  を参考に.
  [[http://matsucon.net/][MatsuCon]] で公開されている顔文字に関しては
  顔文字に ; や が含まれている場合に, 適宜quoteする必要があるので
  以下のスクリプトで適当に変換.
  #+BEGIN_SRC ruby
    #!/usr/bin/env ruby
    require 'nkf'
    src = ARGV[0]
    if ARGV.size < 1
      puts "usage: ime2skk.rb ime_dictionary"
      exit 0
    end
    File.open(src, "r") {|f|
      f.each do |line|
        line_euc = NKF.nkf("-S -e",line)
        if line_euc =~ /^([^!]+?)\t(.+?)\t.+$/
          entry = $1
          content = $2
          if content =~/;/
            puts entry + " /(concat \""+ content.gsub(';','\\\\073')+"\")/"
          elsif content =~/\//
            puts entry + " /(concat \""+ content.gsub('/','\\\\057')+"\")/"
          else
            puts entry + " /"+ content +"/"
          end
        end
      end
    }
  #+END_SRC
  他にも quote する必要あるような気もするけれど, それは気がついた時に.
  #+BEGIN_SRC emacs-lisp
    ;; 辞書サーバの指定
    (cond
     ((getenv "SKKSERVER")
      (setq skk-server-host "127.0.0.1")
      (setq skk-server-portnum "1178")
      (setq skk-large-jisyo nil)
      ;; server completion
      (add-to-list 'skk-search-prog-list
                   '(skk-server-completion-search) t)
      (add-to-list 'skk-search-prog-list
                   '(skk-comp-by-server-completion) t)
      )
     (t
      (setq skk-large-jisyo
            (concat user-emacs-directory "share/skkdic/SKK-JISYO.L"))
      ))
    ;; 辞書登録の際に送り仮名を削除
    (setq skk-check-okurigana-on-touroku 'auto)
    ;;漢字登録のミスをチェックする
    (setq skk-check-okurigana-on-touroku t)
  #+END_SRC
* 動的補完
  #+BEGIN_SRC emacs-lisp
    ;; ;; 動的補完
    ;; (setq skk-dcomp-activate t)
    ;; (setq skk-dcomp-multiple-activate t)
    ;; (setq skk-dcomp-multiple-rows 5)
    ;; ;; 動的補完の複数表示群のフェイス
    ;; (set-face-foreground 'skk-dcomp-multiple-face "Black")
    ;; (set-face-background 'skk-dcomp-multiple-face "LightGoldenrodYellow")
    ;; (set-face-bold-p 'skk-dcomp-multiple-face nil)
    ;; ;; 動的補完の複数表示郡の補完部分のフェイス
    ;; (set-face-foreground 'skk-dcomp-multiple-trailing-face "dim gray")
    ;; (set-face-bold-p 'skk-dcomp-multiple-trailing-face nil)
    ;; ;; 動的補完の複数表示郡の選択対象のフェイス
    ;; (set-face-foreground 'skk-dcomp-multiple-selected-face "White")
    ;; (set-face-background 'skk-dcomp-multiple-selected-face "LightGoldenrod4")
    ;; (set-face-bold-p 'skk-dcomp-multiple-selected-face nil)
  #+END_SRC
* 部首変換, 総画数変換
  #+BEGIN_SRC emacs-lisp
    ;; (eval-and-compile (require 'skk-tankan nil 'noerror))
    (add-to-list 'skk-search-prog-list
                 '(skk-tankan-search 'skk-search-jisyo-file
                                     skk-large-jisyo 10000))
  #+END_SRC
