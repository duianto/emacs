# -*- mode: org; coding: utf-8-unix; indent-tabs-mode: nil -*-
#
# Copyright(C) Youhei SASAKI All rights reserved.
# $Lastupdate: 2013/01/25 11:38:22$
# License: Expat
#
#+TITLE: muse-mode の設定
#+AUTHOR: Youhei SASAKI
#+EMAIL: uwabami@gfd-dennou.org
#+SETUPFILE: ./export-config.org
#+BEGIN_HTML
---
layout: emacs
title: muse-mode の設定
---
#+END_HTML
* 始めに
  [[http://www.gfd-dennou.org/member/uwabami/cc-env/][計算機関連のメモ]] はほとんど全て [[http://mwolson.org/projects/EmacsMuse.html][muse-mode]] [fn:1] で書いています.
* インストールと読み込み
  #+BEGIN_SRC emacs-lisp
    (unless (my:dpkg-status 'muse-el)
      (el-get 'sync '(muse)))
    (eval-and-compile
      (unless (locate-library "htmlize")
        (add-to-load-path "modules/org-mode/contrib/lisp")))
    (require 'htmlize)
    (require 'muse nil 'noerror)
    (require 'muse-mode nil 'noerror)
    (require 'muse-colors nil 'noerror)
    (require 'muse-project nil 'noerror)
    (require 'muse-html nil 'noerror)
    (require 'muse-latex nil 'noerror)
    (require 'muse-latex2png nil 'noerror)
  #+END_SRC
* 雑多な設定
** キーバインド
   C-x M で muse-project-find-file
   #+BEGIN_SRC emacs-lisp
     (define-key ctl-x-map "M" 'muse-project-find-file)
   #+END_SRC
** orgstruct + outline-minor-mode で編集を org っぽく.
   #+BEGIN_SRC emacs-lisp
     (add-hook 'muse-mode-hook 'turn-on-orgstruct)
     (add-hook 'muse-mode-hook 'turn-on-orgstruct++)
     (add-hook 'muse-mode-hook
               (lambda ()
                 (footnote-mode)
                 (outline-minor-mode)
                 (if window-system
                     (define-key muse-mode-map [tab] 'outline-toggle-children)
                   (define-key muse-mode-map "\t" 'outline-toggle-children))
                 ))
   #+END_SRC
** 文字コード関連
   #+BEGIN_SRC emacs-lisp
     (setq muse-xhtml-charset-default "utf-8")
     (setq muse-html-encoding-default (quote utf-8))
     (setq muse-html-meta-content-encoding (quote utf-8))
   #+END_SRC
* Project の定義
  今のところ [[http://www.gfd-dennou.org/member/uwabami/cc-env/][計算機関連のメモ]] にしか使わないのでその設定のみ.
** footnote の定義の上書き
   #+BEGIN_SRC emacs-lisp
     (defun my:muse-html-markup-footnote ()
       (cond
        ((get-text-property (match-beginning 0) 'muse-link)
         nil)
        ((= (muse-line-beginning-position) (match-beginning 0))
         (prog1
             (let ((text (match-string 1)))
               (muse-insert-markup
                (concat "<p class=\"footnote\">"
                        "<a class=\"footnum\" id=\"fn." text
                        "\" href=\"#fnr." text "\">"
                        text ".</a>")))
           (save-excursion
             (save-match-data
               (let* ((beg (goto-char (match-end 0)))
                      (end (and (search-forward "\n\n" nil t)
                                (prog1
                                    (copy-marker (match-beginning 0))
                                  (goto-char beg)))))
                 (while (re-search-forward (concat "^["
                                                   muse-regexp-blank
                                                   "]+\\([^\n]\\)")
                                           end t)
                   (replace-match "\\1" t)))))
           (replace-match "")))
        (t (let ((text (match-string 1)))
             (muse-insert-markup
              (concat "<sup><a class=\"footref\" id=\"fnr." text
                      "\" href=\"#fn." text "\">"
                      text "</a></sup>")))
           (replace-match ""))))
     (setq muse-html-markup-functions
           (quote ((anchor . muse-html-markup-anchor) (table . muse-html-markup-table) (footnote . my:muse-html-markup-footnote))))
   #+END_SRC
** style
   #+BEGIN_SRC emacs-lisp
     (muse-derive-style "my:cc-env" "html"
                        :header "~/Public/_config/muse-header.html"
                        :footer "~/Public/_config/muse-footer.html"
                        )
     (setq muse-footer-date-format "%F %H:%M:%S %Z ")
   #+END_SRC
** project
   #+BEGIN_SRC emacs-lisp
     (setq muse-project-alist
                 '(
                   ("cc-env"
                    ("~/Public/cc-env" :default "index")
                    (:base "my:cc-env" :path "~/Public/cc-env"))
                   ))
   #+END_SRC
* Footnotes

[fn:1] Emacs Muse:[[http://mwolson.org/projects/EmacsMuse.html]]
