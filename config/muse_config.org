# -*- mode: org; coding: utf-8-unix; indent-tabs-mode: nil -*-
#
# Copyright(C) Youhei SASAKI All rights reserved.
# License: Expat
#
#+TITLE: muse-mode の設定
#+AUTHOR: Youhei SASAKI
#+EMAIL: uwabami@gfd-dennou.org
#+DATE: 2013-09-23 19:57:13
#+SETUPFILE: ./export-config.org

* 始めに
  [[http://www.gfd-dennou.org/member/uwabami/cc-env/][計算機関連のメモ]] はほとんど全て [[http://mwolson.org/projects/EmacsMuse.html][muse-mode]] [fn:1] で書いています.
  Emacs 内で Wiki の様にページを辿れるのが気にいっています.

  いっそ全部 Org で書こうか, とか思案しますが「ページを辿る」ことが面倒でちょっと思案中.
  OrgCapture と組み合わせれば, 全部いけるのかもしれませんけれど.
* インストールと読み込み
  #+BEGIN_SRC emacs-lisp
    (unless (locate-library "muse")
      (el-get 'sync '(muse)))
    (eval-and-compile
      (unless (locate-library "htmlize")
        (add-to-load-path "modules/org-mode/contrib/lisp")))
    (require 'htmlize)
    (require 'muse nil 'noerror)
    (require 'muse-mode nil 'noerror)
    (require 'muse-colors nil 'noerror)
    (require 'muse-project nil 'noerror)
    (require 'muse-html nil 'noerror)
    (require 'muse-latex nil 'noerror)
    (require 'muse-latex2png nil 'noerror)
  #+END_SRC
* 雑多な設定
** キーバインド
   C-x M で muse-project-find-file
   #+BEGIN_SRC emacs-lisp
     (define-key ctl-x-map "M" 'muse-project-find-file)
   #+END_SRC
** 文字コード関連
   #+BEGIN_SRC emacs-lisp
     (setq muse-xhtml-charset-default "utf-8")
     (setq muse-html-encoding-default (quote utf-8))
     (setq muse-html-meta-content-encoding (quote utf-8))
   #+END_SRC
** timestamp の変更
   muse の =publishing-directive= に合わせる
   #+BEGIN_SRC emacs-lisp
     (defun my:muse-timestamp-hook ()
       "Change `time-stamp-start' in muse-mode"
       (set (make-local-variable 'time-stamp-start) "#date[ \t]+2")
       (set (make-local-variable 'time-stamp-end)   "\$")
       )
     (add-hook 'muse-mode-hook 'my:muse-timestamp-hook)
   #+END_SRC
* Project の定義
  今のところ [[http://www.gfd-dennou.org/member/uwabami/cc-env/][計算機関連のメモ]] にしか使わないのでその設定のみ.
** style
   htmlize の上書き: org-mode だとオプションを設定できるのだけれど muse ではできなかったので,
   本家の関数自体を上書きすることに.
   #+BEGIN_SRC emacs-lisp
     (setq htmlize-output-type 'css)
     (setq htmlize-css-name-prefix "htmlized-")
     (setq htmlize-generate-hyperlinks nil)
     (defun htmlize-region-for-paste (beg end)
       "Override htmlize. This forces the `css' style and only returns the HTML body without BODY"
       (let* ((htmlize-output-type 'css)  ; was `inline-css'
              (htmlize-css-name-prefix "htmlized-")
              (htmlize-generate-hyperlinks nil)
              (htmlbuf (htmlize-region beg end)))
         (unwind-protect
             (with-current-buffer htmlbuf
               (buffer-substring (plist-get htmlize-buffer-places 'content-start)
                                 (plist-get htmlize-buffer-places 'content-end)))
           (kill-buffer htmlbuf))))
   #+END_SRC
** スタイルの定義
   ヘッダ, フッタ, ディレクティブの指定
   #+BEGIN_SRC emacs-lisp
     (muse-derive-style "my:cc-env" "html"
                        :header "~/Public/_config/muse-header.html"
                        :footer "~/Public/_config/muse-footer.html"
                        )
     (setq muse-footer-date-format "%F %H:%M:%S %Z ")
   #+END_SRC
** project
   #+BEGIN_SRC emacs-lisp
     (setq muse-project-alist
                 '(
                   ("cc-env"
                    ("~/Public/_posts/" :default "index")
                    (:base "my:cc-env" :path "~/Public/_posts/"))
                   ))
   #+END_SRC
* Footnotes

[fn:1] Emacs Muse:[[http://mwolson.org/projects/EmacsMuse.html]]
