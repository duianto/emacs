# -*- mode: org; coding: utf-8-unix; indent-tabs-mode: nil -*-
#
# Copyright(C) Youhei SASAKI All rights reserved.
# $Lastupdate: 2013/01/24 04:57:56$
# License: Expat
#
#+TITLE: Emacsの基本設定
#+AUTHOR: Youhei SASAKI
#+EMAIL: uwabami@gfd-dennou.org
#+SETUPFILE: ./export-config.org
#+BEGIN_HTML
---
layout: emacs
title: Emacsの基本設定
---
#+END_HTML
* 始めに
  =~/.emacs= → =~/.emacs.d/init.el= ([[http://www.gfd-dennou.org/member/uwabami/cc-env/EmacsBasic.html][解説]]) ときて,
  このファイルで設定ファイルの読み込みを行なっています.
* bundle/el-get
  #+BEGIN_SRC emacs-lisp
    (my:load-org-file "bundle_config.org")
  #+END_SRC
* [[file:language_config.org][言語の設定]]
  #+BEGIN_SRC emacs-lisp
    (my:load-org-file "language_config.org")
  #+END_SRC
* [[file:basic_config.org][バージョン依存しない(はず)の雑多な設定]]
  #+BEGIN_SRC emacs-lisp
    (my:load-org-file "basic_config.org")
  #+END_SRC
* 日本語入力: [[http://openlab.ring.gr.jp/skk/ddskk-ja.html][Daredevil SKK (DDSKK)]]
  SKK をメインで使用中. 無いと途方に暮れる.
  ちなみにGTKが有効になっていると =gtk-immodule= なんかと衝突するので
  =~/.Xresources= で xim を無効にしておくと良い.
  例えば以下の様に:
  #+BEGIN_EXAMPLE
     ! disable XIM
     Emacs*useXIM: false
  #+END_EXAMPLE
  =skk-user-directory= を設定しているので, 辞書や id なんかは
  =~/.emacs.d/etc/skk= 以下に置かれるが,
  実際の設定は [[file:ddskk_config.org][ddskkの設定]] で行なっている.
** install
   ddskk がインストールされていない/古い ddskk が install されている場合には
   最新版を入手することに.
   ただし el-get の recipe CVSを使っている(= proxy を越えられない)ので
   [[https://github.com/hsaito/ddskk][github:hsaito/ddskk]] を使わせて頂くことに.
   recipe は [[https://raw.github.com/uwabami/dot.emacs.d/master/recipes/ddskk.rcp][recipes/ddskk.rcp]] を参照.
  #+BEGIN_SRC emacs-lisp
    (unless (locate-library "skk-sticky")
      (el-get 'sync 'ddskk))
  #+END_SRC
** 読み込み前の設定
   設定ファイルの位置変更
   #+BEGIN_SRC emacs-lisp
        (setq skk-user-directory
              (concat my:user-emacs-temporary-directory "skk"))
        (setq skk-init-file
              (concat my:user-emacs-config-directory "ddskk_config"))
   #+END_SRC
   org で設定を書くためのアレコレ
   #+BEGIN_SRC emacs-lisp
     ;; org で書かれた設定ファイルから elisp を抽出
     (my:org-babel-tangle-and-compile-file
      (concat my:user-emacs-config-directory "ddskk_config.org"))
     ;; ddskk の設定ファイルは読み込み時に byte-compile する
     (setq skk-byte-compile-init-file t)
   #+END_SRC
   実際の読み込み
   #+BEGIN_SRC emacs-lisp
     ;; skk-autoloads で読み込み
     (require 'skk-leim)
     (setq default-input-method "japanese-skk")
     (require 'skk-autoloads)
     (require 'skk-cus)
   #+END_SRC
* [[file:migemo_config.org][C/Migemo の設定]]
  #+BEGIN_SRC emacs-lisp
    (when (executable-find "cmigemo")
      (my:load-org-file "migemo_config.org"))
  #+END_SRC
* テンプレートの自動挿入: [[file:autoinsert_config.org][autoinsert]]
  #+BEGIN_SRC emacs-lisp
    (my:load-org-file "autoinsert_config.org")
  #+END_SRC
* [[file:w3m_config.org][emacs-w3mの設定]]
  #+BEGIN_SRC emacs-lisp
    (when (locate-library "w3m")
      (my:load-org-file "w3m_config.org"))
  #+END_SRC
* MUAの設定
  手元では Wanderlust を使っている.

  Wanderlust の設定自体は [[file:wl_config.org][Wanderlust の設定]] を参照の事.
  #+BEGIN_SRC emacs-lisp
    (when (and (locate-library "wl")
               (file-exists-p (concat user-emacs-directory ".wl-use")))
      (my:load-org-file "mua_config.org"))
  #+END_SRC
* [[file:auto-complete_config.org][AutoComplete]]
  Debianでは [[http://packages.qa.debian.org/a/auto-complete-el.html][auto-complete-el]] [fn:3] としてパッケージ化されている.
  #+BEGIN_SRC emacs-lisp
    (my:load-org-file "auto-complete_config.org")
  #+END_SRC
* [[file:anything_config.org][Anything]]
  Debianでは [[http://packages.qa.debian.org/a/anything-el.html][anything-el]] としてパッケージ化されている.
  #+BEGIN_SRC emacs-lisp
    (my:load-org-file "anything_config.org")
  #+END_SRC
* [[file:flyspell_config.org][flyspell-mode]]
  #+BEGIN_SRC emacs-lisp
    (my:load-org-file "flyspell_config.org")
  #+END_SRC
* [[file:lookup_config.org][lookup-el]]
  =lookup= がインストールされていて, 辞書が存在する場合にだけ読み込む.
  #+BEGIN_SRC emacs-lisp
    (if (and (locate-library "lookup")
             (file-exists-p "/usr/local/share/dict/lookup-enabled"))
        (my:load-org-file "lookup_config.org"))
  #+END_SRC
* [[file:fortran-mode_config.org][fortran-mode]]
  #+BEGIN_SRC emacs-lisp
    (my:load-org-file "fortran-mode_config.org")
  #+END_SRC
* [[file:flynamke_config.org][flymakeの設定]]
  #+BEGIN_SRC emacs-lisp
    (my:load-org-file "flymake_config.org")
  #+END_SRC
* [[file:navi2ch_config.org][navi2chの設定]]
  #+BEGIN_SRC emacs-lisp
    (if (file-exists-p (concat user-emacs-directory ".navi2ch-use"))
        (my:load-org-file "navi2ch_config.org"))
  #+END_SRC
* Footnotes
