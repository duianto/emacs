# -*- mode: org; coding: utf-8-unix; indent-tabs-mode: nil -*-
#
# Copyright(C) Youhei SASAKI All rights reserved.
# License: Expat
#
#+TITLE: Emacsの設定 - 主に org ファイルの読み込み集
#+AUTHOR: Youhei SASAKI
#+EMAIL: uwabami@gfd-dennou.org
#+DATE: 2014-09-03 08:54:48
#+SETUPFILE: ./export-config.org

* 始めに
  =~/.emacs= → =~/.emacs.d/init.el= ([[http://www.gfd-dennou.org/member/uwabami/cc-env/EmacsBasic.html][解説]]) ときて
  このファイルで設定ファイルの読み込みを行なっています.
  具体的な設定例は, 個々のファイルを参照のこと
* Stop Tramp [0/1]
  滅多に使わない/場所によっては読み込み時間がかかりすぎるので明示的に無効化.
  #+BEGIN_SRC emacs-lisp
    (if (fboundp 'tramp-version)
        (setq tramp-mode nil))
  #+END_SRC
  - [ ] そのうち調べる
* [[file:el-get_config.org][el-get での package install]]
  #+BEGIN_SRC emacs-lisp
  (my:load-org-file "el-get_config.org")
  #+END_SRC
* shell から環境変数を引き継ぐ: exec-path-from-shell
  シェルで =DEBFULLNAME=, =DEBEMAIL= を設定しているので、それを使います
  #+BEGIN_SRC emacs-lisp
     (exec-path-from-shell-copy-envs
      '("http_proxy" "DEBFULLNAME" "DEBEMAIL"))
     (setq user-full-name (concat (getenv "DEBFULLNAME")))
     (setq user-mail-address (concat (getenv "DEBEMAIL")))
  #+END_SRC
* cp5022x
  Emacs23 から内部が Unicode ベースになっています.
  しかし文字コードの変換は GNU libc の iconv をベースにしているため,
  環境によっては文字の変換がうまく行なえません.

  そこで言語設定の前に =cp5022x.el= を読み込むことにしています.
  cp5022x については [[http://nijino.homelinux.net/emacs/emacs23-ja.html][Emacs23 日本語向け設定例]]  [fn:3] を参照して下さい.
  #+BEGIN_SRC emacs-lisp
    (my:load-org-file "language_config.org")
  #+END_SRC
  実際の設定は [[file:language_config.org][言語の設定]] を参照のこと
* [[file:elscreen_config.org][Elscreenの設定]]
  Emacs >=24 向けに APEL 非依存版が [[https://github.com/emacs-jp/elscreen][emacs-jp/elscreen]] で公開されていますので,
  これを導入しておきます.
  #+BEGIN_SRC emacs-lisp
    (my:load-org-file "elscreen_config.org")
  #+END_SRC
* [[file:basic_config.org][バージョン依存しない(はず)の雑多な設定]]
  #+BEGIN_SRC emacs-lisp
    (my:load-org-file "basic_config.org")
  #+END_SRC
* 日本語入力: [[http://openlab.ring.gr.jp/skk/ddskk-ja.html][Daredevil SKK (DDSKK)]]
  SKK をメインで使用中. 無いと途方に暮れる.
  ちなみにGTKが有効になっていると =gtk-immodule= なんかと衝突するので
  =~/.Xresources= で xim を無効にしておくと良い.
  例えば以下の様に:
  #+BEGIN_EXAMPLE
     ! disable XIM
     Emacs*useXIM: false
  #+END_EXAMPLE
  =skk-user-directory= を設定しているので, 辞書や id なんかは
  =~/.emacs.d/tmp/skk= 以下に置かれるが,
  実際の設定は [[file:ddskk_config.org][ddskkの設定]] で行なっている.
** 読み込み前の設定
   設定ファイルの位置変更
   #+BEGIN_SRC emacs-lisp
     (setq skk-user-directory
           (concat my:user-emacs-temporary-directory "skk"))
     (setq skk-init-file
           (concat my:user-emacs-config-directory "ddskk_config"))
   #+END_SRC
   org で設定を書くためのアレコレ
   #+BEGIN_SRC emacs-lisp
     ;; org で書かれた設定ファイルから elisp を抽出
     (my:org-babel-tangle-and-compile-file
      (concat my:user-emacs-config-directory "ddskk_config.org"))
     ;; ddskk の設定ファイルは読み込み時に byte-compile する
     (setq skk-byte-compile-init-file t)
   #+END_SRC
   実際の読み込み
   #+BEGIN_SRC emacs-lisp
     (require 'skk-leim nil 'noerror)
     (setq default-input-method "japanese-skk")
     (require 'skk-autoloads nil 'noerror)
     (require 'skk-cus nil 'noerror)
   #+END_SRC
* [[file:frame_config.org][フォントとフレームの設定]]
  #+BEGIN_SRC emacs-lisp
    (my:load-org-file "frame_config.org")
  #+END_SRC
* [[file:mua_config.org][MUAの設定]]
  MUA として Wanderlust を使っている.
  #+BEGIN_SRC emacs-lisp
    (when (and (locate-library "wl")
               (file-exists-p (concat user-emacs-directory ".wl-use")))
      (autoload 'wl "wl" "Wanderlust" t)
      (autoload 'wl-other-frame "wl" "Wanderlust on new frame" t)
      (autoload 'wl-draft "wl-draft" "Write draft with Wanderlust." t)
      (if (boundp 'mail-user-agent)
          (setq mail-user-agent 'wl-user-agent))
      (if (boundp 'read-mail-command)
          (setq read-mail-command 'wl))
      (if (fboundp 'define-mail-user-agent)
          (define-mail-user-agent
            'wl-user-agent
            'wl-user-agent-compose
            'wl-draft-send
            'wl-draft-kill
            'mail-send-hook))
      (setq elmo-msgdb-directory "~/Mail/elmo")
      (my:org-babel-tangle-and-compile-file
       (concat my:user-emacs-config-directory "wl_config.org"))
      (setq wl-init-file
            (concat my:user-emacs-config-directory "wl_config"))
      )
  #+END_SRC
* [[file:migemo_config.org][C/Migemo]]
  #+BEGIN_SRC emacs-lisp
    (when (and (executable-find "cmigemo")
               (locate-library "migemo"))
      (my:load-org-file "migemo_config.org"))
  #+END_SRC
* [[file:auto-complete_config.org][AutoComplete]]
  #+BEGIN_SRC emacs-lisp
    (my:load-org-file "auto-complete_config.org")
  #+END_SRC
* [[file:anything_config.org][Anything]]
  #+BEGIN_SRC emacs-lisp
    (setq anything-c-adaptive-history-file
          (concat my:user-emacs-temporary-directory "anything-c-adaptive-history"))
    (my:load-org-file "anything_config.org")
  #+END_SRC
* TeX関連: [[file:auctex_config.org][AUCTeX の設定]]
  [[http://www.gnu.org/software/auctex/][AUCTeX]] に LaTeXmk 用のコマンドを追加する.
  [[https://github.com/tom-tan/auctex-latexmk][auctex-latexmk]] を愛用中.
  =pLaTeX= を使う場合には文字コードオプションも追加してくれる.
  実際の設定は [[file:auctex_config.org][AUCTeXの設定]] で.
  #+BEGIN_SRC emacs-lisp
    (when (locate-library "latexmk-auctex")
      (my:load-org-file "auctex_config.org"))
  #+END_SRC
