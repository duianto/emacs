# -*- mode: org; coding: utf-8-unix; indent-tabs-mode: nil -*-
# init-flymake.org
#
# Copyright(C) Youhei SASAKI All rights reserved.
# $Lastupdate: 2011/11/23 04:15:00$
#
# Author: Youhei SASAKI <uwabami@gfd-dennou.org>
# License:
# This program is permitted under the principle of "NO WARRANTY" and "NO
# RESPONSIBILITY". The author shall not be liable for any event arising in
# any way out of the use of these resources.
#
# Redistribution in source and binary forms, with or without modification,
# is also permitted provided that the above copyright notice, disclaimer
# and this condition are retained.
#
#Code:
#+TITLE: flymake-mode の基本設定
#+OPTIONS: toc:2 num:nil ^:nil

** 基本設定
*** require
#+BEGIN_SRC emacs-lisp
(require 'flymake)
#+END_SRC
*** GUI はいらない
#+BEGIN_SRC emacs-lisp
(setq flymake-gui-warnings-enabled nil)
#+END_SRC
*** 全てのファイルで flymake を有効化
#+BEGIN_SRC emacs-lisp
(add-hook 'find-file-hook 'flymake-find-file-hook)
#+END_SRC
** 基本となる呼出関数
#+BEGIN_SRC emacs-lisp
(defun flymake-simple-generic-init (cmd &optional opts)
  (let* ((temp-file  (flymake-init-create-temp-buffer-copy
                      'flymake-create-temp-inplace))
         (local-file (file-relative-name
                      temp-file
                      (file-name-directory buffer-file-name))))
    (list cmd (append opts (list local-file)))))
#+END_SRC
** Makefile の有無による呼出の分岐
#+BEGIN_SRC emacs-lisp
(defun flymake-simple-make-or-generic-init (cmd &optional opts)
  (if (file-exists-p "Makefile")
      (flymake-simple-make-init)
    (flymake-simple-generic-init cmd opts)))
(defun flymake-c-init ()
  (flymake-simple-make-or-generic-init
   "gcc" '("-Wall" "-Wextra" "-pedantic" "-fsyntax-only")))
(defun flymake-cc-init ()
  (flymake-simple-make-or-generic-init
   "g++" '("-Wall" "-Wextra" "-pedantic" "-fsyntax-only")))
(defun flymake-fortran-init ()
  (flymake-simple-make-or-generic-init
   "gfortran" '("-Wall" "-Wextra" "-pedantic" "-fsyntax-only")))
#+END_SRC
** 対象の追加
#+BEGIN_SRC emacs-lisp
(push '("\\.[cC]\\'" flymake-c-init) flymake-allowed-file-name-masks)
(push '("\\.\\(?:cc\|cpp\|CC\|CPP\\)\\'" flymake-cc-init) flymake-allowed-file-name-masks)
(push '("\\.\\(?:f\|f90\\)\\'" flymake-fortran-init) flymake-allowed-file-name-masks)
#+END_SRC
