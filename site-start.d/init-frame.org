# -*- mode: org; coding: utf-8-unix; indent-tabs-mode: nil -*-
# init-frame.org
#+begin_quote
#
# Copyright(C) Youhei SASAKI All rights reserved.
# $Lastupdate: 2011/11/28 13:14:57$
#
# Author: Youhei SASAKI <uwabami@gfd-dennou.org>
# License: GPL-3+
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#+end_quote
#+SETUPFILE: ~/.emacs.d/template/org/level-2.org
#+INCLUDE: ~/.emacs.d/template/org/menu-level-2.org
#+TITLE: 03.GUI 環境でのフレームの設定
#Code:


** 背景色の設定
color-theme では透過色のターミナルで作業することを考えて,
意図的に背景色を設定していない. なので, ここで設定する.
#+begin_src emacs-lisp
  (when window-system
    (add-to-list 'default-frame-alist '(background-color . "#242424")))
#+end_src
** [[http://d.hatena.ne.jp/khiker/20090809/emacs_opacity][フレームを半透明にする]]
#+begin_src emacs-lisp
  (defun my-opacity-change (action)
    (let* ((op
            (frame-parameter
             (selected-frame) 'alpha)) val)
      (unless op
        (setq op 100))
      (when (setq val
                  (cond
                   ((eq action 'up)
                    (if (> op 90) 100 (+ op 10)))
                   ((eq action 'down)
                    (if (> 10 op) 10 (- op 10)))
                   ((eq action 'clear)
                    100)
                   ((numberp action)
                    action)
                   (t
                    nil)))
        (set-frame-parameter (selected-frame) 'alpha val))))
  (when window-system
    (my-opacity-change 90)     ; default の透明度は 85 に
    )
#+end_src
** フォント設定
   Ricty を使用することにする(Ricty の無い環境はとりあえず考えていない).
#+begin_src emacs-lisp
  (create-fontset-from-ascii-font "Ricty-13.5" nil "ricty")
  (dolist (charset '(
                     unicode
                     japanese-jisx0208
                     japanese-jisx0208-1978
                     japanese-jisx0212
                     japanese-jisx0213-1
                     japanese-jisx0213-2
                     japanese-jisx0213-a
                     japanese-jisx0213.2004-1
                     katakana-jisx0201
                     ))
    (set-fontset-font "fontset-ricty"
                      charset
                      (font-spec
                       :family "Ricty"
                       :size 13.5
                      nil
                      'prepend)))
  (add-to-list 'default-frame-alist '(font ."fontset-ricty"))
#+end_src
