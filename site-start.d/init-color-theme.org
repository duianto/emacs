# -*- mode: org; coding: utf-8-unix; indent-tabs-mode: nil -*-
# init-color-theme.org
#+begin_quote
#
# Copyright(C) Youhei SASAKI All rights reserved.
# $Lastupdate: 2011/11/28 11:48:42$
#
# Author: Youhei SASAKI <uwabami@gfd-dennou.org>
# License: MIT
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
#+end_quote
#Code:
#+SETUPFILE: ~/.emacs.d/template/org/level-2.org
#+INCLUDE: ~/.emacs.d/template/org/menu-level-2.org
#+TITLE: 02. color-theme の設定
#Code:

** 256 色表示のための設定

ansi-color の方が良いのかな...

#+begin_src emacs-lisp
(defun terminal-init-screen ()
  "Terminal initialization function for screen"
  (load "term/xterm")
  (xterm-register-default-colors)
  (tty-set-up-initial-frame-faces)
  )
#+end_src
** 色の設定 -> color-theme で.
#+begin_src emacs-lisp
  (my:not-locate-library color-theme-autoloads "site-lisp/color-theme-6.6.0")
  (add-to-load-path "site-lisp/color-theme-darkpastel")
  (setq color-theme-load-all-themes nil)
  (setq color-theme-libraries nil)
  (require 'color-theme-autoloads)
  (eval-after-load "color-theme-autoloads"
    '(progn
      (color-theme-initialize)
      (require 'color-theme-darkpastel)
      ))
  (color-theme-darkpastel)
#+end_src
** space, tab を色分け表示
#+begin_src emacs-lisp
  (defface my-face-r-1 '((t (:background "gray10"))) nil)
  (defface my-face-b-1 '((t (:background "gray"))) nil)
  (defface my-face-b-2 '((t (:background "gray50"))) nil)
  (defface my-face-u-1 '((t (:foreground "SteelBlue" :underline t))) nil)
  (defvar my-face-r-1 'my-face-r-1)
  (defvar my-face-b-1 'my-face-b-1)
  (defvar my-face-b-2 'my-face-b-2)
  (defvar my-face-u-1 'my-face-u-1)
  (defadvice font-lock-mode (before my-font-lock-mode ())
    (font-lock-add-keywords
     major-mode
     '(("\t" 0 my-face-b-2 append)
       ("　" 0 my-face-b-1 append)
       ("[ \t]+$" 0 my-face-u-1 append)
       ;;("[\r]*\n" 0 my-face-r-1 append)
       )))
  (ad-enable-advice 'font-lock-mode 'before 'my-font-lock-mode)
  (ad-activate 'font-lock-mode)
#+end_src

